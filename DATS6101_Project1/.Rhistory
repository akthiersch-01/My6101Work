pizza = data.frame(read.csv("Pizza.csv"))
length(pizza)
nrow(pizza)
xkablesummary(pizza)
install.packages("ezids")
install.packages("devtools")
install.packages("devtools")
xkablesummary(pizza)
install.packages("devtools")
library(devtools)
devtools::install_github("physicsland/ezids")
install.packages("devtools")
pizza = data.frame(read.csv("Pizza.csv"))
nrow(pizza)
xkablesummary(pizza)
install.packages("kableExtra")
library(kableExtra)
library(kableExtra)
xkablesummary(pizza)
xkable summary(pizza)
xkable summary(pizza)
xtablesummary(pizza)
install.packages("ggplot2")
library(ggplot2)
View(pizza)
ggplot(pizza, aes(x=sodium, y=cal))+
geom_boxplot()
ggplot(pizza, aes(x=pizza$sodium, y=pizza$cal))+
geom_boxplot()
ggplot(pizza, aes(x=sodium, y=cal))+
geom_boxplot()
ggplot(pizza, aes(y=sodium))+
geom_boxplot()
ggplot(pizza, aes(x=sodium))+
geom_boxplot()
ggplot(pizza, aes(y=sodium, y=len))+
geom_boxplot()
ggplot(pizza, aes(x=sodium)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
ggplot(pizza, aes(x=sodium)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
ggplot(pizza, aes(x=cal)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
qqnorm(x=pizza$sodium, col='red')
ggplot(pizza, aes(sample = sodium)) +
stat_qq() +
stat_qq_line(col = "red")
#Calorie QQ-Plot
ggplot(pizza, aes(sample = cal)) +
stat_qq() +
stat_qq_line(col = "red")
ggplot(pizza, aes(x=calorie, y=sodium)) + geom_point()
ggplot(pizza, aes(x=cal, y=sodium)) + geom_point()
ggplot(pizza, aes(x=sodium, y=cal)) + geom_point()
ggplot(pizza, aes(x=sodium, y=cal, color=prot)) + geom_point()
pizza$
ggplot(pizza, aes(x=sodium, y=cal)) + geom_point(aes(color=prot)) + ggtitle("Scatterplot of Calorie vs. Sodium by Protein") + xlab("Sodium") + ylab("Calorie") + labs(col="Protein")
ggplot(pizza, aes(x=sodium, y=cal)) + geom_point(aes(color=prot)) + ggtitle("Scatterplot of Calorie vs. Sodium by Protein") + xlab("Sodium") + ylab("Calorie")
ggplot(pizza, aes(x=sodium, y=cal)) + geom_point() + ggtitle("Scatterplot of Calorie vs. Sodium by Protein") + xlab("Sodium") + ylab("Calorie")
ggplot(pizza, aes(x=sodium, y=cal)) + geom_point() + ggtitle("Scatterplot of Calorie vs. Sodium") + xlab("Sodium") + ylab("Calorie")
ggplot(pizza, aes(x=brand, y=sodium)) + geom_point() + ggtitle("Scatterplot of Sodium vs. Brand") + xlab("Brand") + ylab("Sodium")
# some of common options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
devtools::install_github("physicsland/ezids")
install.packages("devtools")
library(ezids)
library(ggplot2)
library(dplyr)
library(vtable)
library(devtools)
library(kableExtra)
# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
# some of common options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
library(ezids)
# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
#Importing Dataset
library(readr)
Adata <- read_csv("~/Documents/My6101Work/LogRegAdmit.csv")
View(Adata)
#Importing Dataset
library(readr)
Adata <- read_csv("~/Documents/My6101Work/LogRegAdmit.csv")
#View(Adata)
as.factor(Adata$admit)
as.factor(Adata$rank)
View(Adata)
#t-interval for gre
gre_ttest80=t.test(x=Adata$gre,conf.level = .80)
gre_ttest99=t.test(x=Adata$gre,conf.level = .99)
#t-interval for gpa
gpa_ttest80=t.test(x=Adata$gpa,conf.level = .80)
gpa_ttest99=t.test(x=Adata$gpa,conf.level = .99)
#t-interval for gre
gre_ttest80<-t.test(x=Adata$gre,conf.level = .80)
gre_ttest99<-t.test(x=Adata$gre,conf.level = .99)
#t-interval for gpa
gpa_ttest80<-t.test(x=Adata$gpa,conf.level = .80)
gpa_ttest99<-t.test(x=Adata$gpa,conf.level = .99)
gpa_ttest80$conf.int
gre_ttest99$conf.int
gpa_ttest80$conf.int
gpa_ttest99$conf.int
#t-interval for gre
gre_ttest80<-t.test(x=Adata$gre,conf.level = .80)
gre_ttest99<-t.test(x=Adata$gre,conf.level = .99)
#t-interval for gpa
gpa_ttest80<-t.test(x=Adata$gpa,conf.level = .80)
gpa_ttest99<-t.test(x=Adata$gpa,conf.level = .99)
gre_ttest80$conf.int
gre_ttest99$conf.int
gpa_ttest80$conf.int
gpa_ttest99$conf.int
#Subset data for admitted(1) and rejected students(0)
admit_student<-subset(Adata, admit=1)
reject_student<-subset(Adata, admit=0)
view(reject_student)
View(reject_student)
admit_student<-subset(Adata, Adata$admit=1)
admit_student<-subset(Adata, admit==1)
reject_student<-subset(Adata, admit==0)
View(reject_student)
#Subset data for admitted(1) and rejected students(0)
admit_student<-subset(Adata, admit==1)
reject_student<-subset(Adata, admit==0)
View(admit_student)
View(reject_student)
#t-intervals for admitted students
admit_ttest80<-t.test(x=admit_student$gre,conf.level = .80)
admit_ttest99<-t.test(x=admit_student$gre,conf.level = .99)
admit_ttest80$conf.int
admit_ttest99$conf.int
#t-intervals for rejected students
reject_ttest80<-t.test(x=reject_student$gre,conf.level = .80)
reject_ttest99<-t.test(x=reject_student$gre,conf.level = .99)
reject_ttest80$conf.int
reject_ttest99$conf.int
library(ggplot2)
ggplot(Adata, aes(x=rank, y=gre, fill=rank))+geom_boxplot()
ggplot(Adata, aes(x=rank, y=gre))+geom_boxplot()
View(Adata)
ggplot(Adata, aes(x=rank, y=gre))+geom_boxplot(aes(fill=rank))
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot()
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot(fill=rank)+
labs(title="Boxplot of GRE Distribution by Applicant School Rankings", x="Rank", y="GRE")
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot(color=rank)+
labs(title="Boxplot of GRE Distribution by Applicant School Rankings", x="Rank", y="GRE")
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
labs(title="Boxplot of GRE Distribution by Applicant School Rankings", x="Rank", y="GRE")
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(color=rank))+
labs(title="Boxplot of GRE Distribution by Applicant School Rankings", x="Rank", y="GRE")
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
labs(title="Boxplot of GRE Distribution by Applicant School Rankings", x="Rank", y="GRE")
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
labs(title="Boxplot of GRE Distribution by Applicant School Rankings", x="Rank", y="GRE")+ theme_classic()
ggplot(pizza, aes(x=brand, y=sodium)) + geom_point(aes(color=brand), shape=1) + ggtitle("Scatterplot of Sodium vs. Brand") + xlab("Brand") + ylab("Sodium (grams)")
ggplot(pizza, aes(x=cal, y=sodium)) + geom_point(aes(color=prot), shape=1) + ggtitle("Scatterplot of Sodium vs. Calorie by Protein") + xlab("Calories (grams)") + ylab("Sodium (grams)") + labs(col="Protein (grams)")
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
ggtitle("Boxplot of GRE Distribution by Applicant School Rankings") + xlab("Rank") + ylab("GRE") + labs(col="Rank")
ggplot(Adata, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
ggtitle("Boxplot of GRE Distribution by Applicant School Rankings") + xlab("Rank") + ylab("GRE") + labs(fill="Rank")
#Subset data for admitted(1) and rejected students(0)
admit_student<-subset(Adata, admit==1)
reject_student<-subset(Adata, admit==0)
View(admit_student)
View(reject_student)
#t-intervals for admitted students
admit_ttest80<-t.test(x=admit_student$gre,conf.level = .80)
admit_ttest99<-t.test(x=admit_student$gre,conf.level = .99)
admitgre_ttest80$conf.int
#Subset data for admitted(1) and rejected students(0)
admit_student<-subset(Adata, admit==1)
reject_student<-subset(Adata, admit==0)
#View(admit_student)
#View(reject_student)
#t-intervals for admitted students
admitgre_ttest80<-t.test(x=admit_student$gre,conf.level = .80)
admitgre_ttest99<-t.test(x=admit_student$gre,conf.level = .99)
admitgre_ttest80$conf.int
admitgre_ttest99$conf.int
#t-intervals for rejected students
rejectgre_ttest80<-t.test(x=reject_student$gre,conf.level = .80)
rejectgre_ttest99<-t.test(x=reject_student$gre,conf.level = .99)
rejectgre_ttest80$conf.int
rejectgre_ttest99$conf.int
#t-intervals for admitted students
admit_ttest80<-t.test(x=admit_student$gpa,conf.level = .80)
admit_ttest99<-t.test(x=admit_student$gpa,conf.level = .99)
admit_ttest80$conf.int
admit_ttest99$conf.int
#t-intervals for rejected students
rejectgpa_ttest80<-t.test(x=reject_student$gpa,conf.level = .80)
rejectgpa_ttest99<-t.test(x=reject_student$gpa,conf.level = .99)
rejectgpa_ttest80$conf.int
rejectgpa_ttest99$conf.int
ggplot(admit_student, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
ggtitle("Boxplot of GRE Distribution by Applicant School Rankings") + xlab("Rank") + ylab("GRE") + labs(fill="Rank")
ggplot(reject_student, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
ggtitle("Boxplot of GRE Distribution by Applicant School Rankings") + xlab("Rank") + ylab("GRE") + labs(fill="Rank")
ggplot(admit_student, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
ggtitle("Boxplot of GRE Distribution by Admitted Applicant School Rankings") + xlab("Rank") + ylab("GRE") + labs(fill="Rank")
ggplot(reject_student, aes(x=rank, y=gre, group=rank))+geom_boxplot(aes(fill=rank))+
ggtitle("Boxplot of GRE Distribution by Rejected Applicant School Rankings") + xlab("Rank") + ylab("GRE") + labs(fill="Rank")
ggplot(admit_student, aes(x=rank, y=gpa, group=rank))+geom_boxplot(aes(fill=rank))+
ggtitle("Boxplot of GPA Distribution by Admitted Applicant School Rankings") + xlab("Rank") + ylab("GPA") + labs(fill="Rank")
ggplot(reject_student, aes(x=rank, y=gpa, group=rank))+geom_boxplot(aes(fill=rank))+
ggtitle("Boxplot of GPA Distribution by Rejected Applicant School Rankings") + xlab("Rank") + ylab("GPA") + labs(fill="Rank")
